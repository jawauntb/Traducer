{"map":"{\"version\":3,\"sources\":[\"/Users/Juan/projects/react-translations/src/App.js\",\"/Users/Juan/projects/react-translations/src/serviceWorker.js\",\"/Users/Juan/projects/react-translations/src/index.js\",\"/Users/Juan/projects/react-translations/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/Juan/projects/react-translations/src/translate.svg\"],\"names\":[\"App\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"handleClick\",\"bind\",\"assertThisInitialized\",\"state\",\"value\",\"setState\",\"react_default\",\"a\",\"createElement\",\"id\",\"src\",\"translate\",\"className\",\"onClick\",\"App_TextForm\",\"App_Table\",\"Component\",\"TextForm\",\"_this2\",\"handleChange\",\"handleSubmit\",\"event\",\"target\",\"text_in\",\"JSON\",\"stringify\",\"input_text\",\"language\",\"output_text\",\"alert\",\"fetch\",\"method\",\"headers\",\"Accept\",\"Content-Type\",\"body\",\"onSubmit\",\"onChange\",\"type\",\"Table\",\"translations\",\"res\",\"json\",\"console\",\"log\",\"_context\",\"t0\",\"map\",\"item\",\"key\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"App_App\",\"document\",\"getElementById\",\"module\",\"exports\",\"__webpack_require__\",\"p\"],\"mappings\":\"4SAKMA,qBACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,YAAcP,EAAKO,YAAYC,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAA,OAAAQ,EAAA,EAAAR,CAAAD,KACnBA,EAAKU,MAAQ,CACXC,OAAQ,GAJOX,6EASfG,KAAKS,SAAS,CAACD,OAAS,EAAER,KAAKO,MAAMC,yCAIvC,OAA0B,IAAtBR,KAAKO,MAAMC,MAEXE,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,GAAG,OACRH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAKC,EAAAA,IACRL,EAAAC,EAAAC,cAAA,OAAA,KAAA,2DACEF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,GAAG,UAAUG,UAAU,WAC1BN,EAAAC,EAAAC,cAAA,SAAA,CAAQK,QAASjB,KAAKI,aAAtB,kBAIRM,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAACM,EAAD,QAMiB,IAArBlB,KAAKO,MAAMC,MAEXE,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,MAAA,KACAF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,GAAG,OACNH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAKC,EAAAA,IACRL,EAAAC,EAAAC,cAAA,OAAA,KAAA,2DACEF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,GAAG,UAAUG,UAAU,WAC9BN,EAAAC,EAAAC,cAAA,SAAA,CAAQK,QAASjB,KAAKI,aAAtB,gBAIJM,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAACO,EAAD,aAbR,SAjCcC,EAAAA,YAuDZC,cACJ,SAAAA,EAAYzB,GAAO,IAAA0B,EAAA,OAAAxB,OAAAC,EAAA,EAAAD,CAAAE,KAAAqB,IACjBC,EAAAxB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuB,GAAAlB,KAAAH,KAAMJ,KACDW,MAAQ,CACXC,MAAO,8BAGTc,EAAKC,aAAeD,EAAKC,aAAalB,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAA,OAAAQ,EAAA,EAAAR,CAAAwB,KACpBA,EAAKE,aAAeF,EAAKE,aAAanB,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAA,OAAAQ,EAAA,EAAAR,CAAAwB,KAPHA,4EAUNG,GACXzB,KAAKS,SAAS,CAACD,MAAOiB,EAAMC,OAAOlB,6CAGxBiB,GACX,IAAIE,EAAUC,KAAKC,UAAU,CAC3BC,WAAY9B,KAAKO,MAAMC,MACvBuB,SAAU,GACVC,YAAa,KAEfC,MAAM,+CAAiDjC,KAAKO,MAAMC,OAClE0B,MAAM,0CAA2C,CAC/CC,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBC,KAAMZ,qCAKR,OACEjB,EAAAC,EAAAC,cAAA,OAAA,CAAMC,GAAG,QAAQ2B,SAAUxC,KAAKwB,cAE9Bd,EAAAC,EAAAC,cAAA,QAAA,KACEF,EAAAC,EAAAC,cAAA,MAAA,KAAA,yCAEEF,EAAAC,EAAAC,cAAA,OAAA,OAEFF,EAAAC,EAAAC,cAAA,OAAA,MACAF,EAAAC,EAAAC,cAAA,WAAA,CAAUJ,MAAOR,KAAKO,MAAMC,MAAOiC,SAAUzC,KAAKuB,gBAEpDb,EAAAC,EAAAC,cAAA,QAAA,CAAO8B,KAAK,SAASlC,MAAM,mBA5CZY,EAAAA,WAqDjBuB,6MACJpC,MAAQ,CACNqC,aAAc,gOAKMV,MAAM,yDAAlBW,kBACqBA,EAAIC,cAAzBF,SACN5C,KAAKS,SAAS,CACZmC,aAAAA,sDAGFG,QAAQC,IAARC,EAAAC,iJAKF,OACExC,EAAAC,EAAAC,cAAA,QAAA,CAAOC,GAAG,WACRH,EAAAC,EAAAC,cAAA,KAAA,KACIF,EAAAC,EAAAC,cAAA,KAAA,KAAA,gBACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,qBACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,wBAEJZ,KAAKO,MAAMqC,aAAaO,IAAI,SAAAC,GAAI,OAChC1C,EAAAC,EAAAC,cAAA,KAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,CAAIyC,IAAKD,EAAKtB,YAAasB,EAAKtB,YAChCpB,EAAAC,EAAAC,cAAA,KAAA,CAAIyC,IAAKD,EAAKrB,UAAWqB,EAAKrB,UAC9BrB,EAAAC,EAAAC,cAAA,KAAA,CAAIyC,IAAKD,EAAKpB,aAAcoB,EAAKpB,wBA7BvBZ,EAAAA,WCrGAkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,EAAAA,EAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe,4BCLjDC,EAAAC,QAAiBC,EAAAC,EAAuB\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport translate from './translate.svg';\\nimport './App.css';\\nimport ReactDOM from 'react-dom';\\n\\nclass App extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.handleClick = this.handleClick.bind(this);\\n    this.state = {\\n      value: -1\\n    };\\n  }\\n\\n  handleClick () {\\n      this.setState({value: (-1*this.state.value)});\\n  }\\n\\n  render () {\\n    if (this.state.value === -1){\\n      return(\\n        <div>\\n          <nav>\\n            <div id=\\\"nav\\\">          \\n            <img src={translate}></img>\\n              <span>Traduce: the translation nation's number 1 notes board </span>\\n                <div id=\\\"choices\\\" className=\\\"wideDiv\\\">\\n                  <button onClick={this.handleClick}>See History</button>\\n                </div>\\n            </div>\\n          </nav>\\n          <div>\\n            <TextForm />\\n          </div>\\n        </div>\\n      );\\n    }\\n\\n    if (this.state.value === 1){\\n      return (\\n        <div>\\n          <nav>\\n          <div id=\\\"nav\\\">          \\n            <img src={translate}></img>\\n              <span>Traduce: the translation nation's number 1 notes board </span>\\n                <div id=\\\"choices\\\" className=\\\"wideDiv\\\">\\n              <button onClick={this.handleClick}>Translate</button>\\n              </div>\\n            </div>\\n          </nav>\\n          <div>\\n            <Table />\\n          </div>\\n        </div>\\n      );\\n    }\\n  }\\n}\\n\\n\\nclass TextForm extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      value: 'Please enter a new phrase.'\\n    };\\n\\n    this.handleChange = this.handleChange.bind(this);\\n    this.handleSubmit = this.handleSubmit.bind(this);\\n  }\\n\\n  handleChange(event) {\\n    this.setState({value: event.target.value});\\n  }\\n\\n  handleSubmit(event) {\\n    var text_in = JSON.stringify({\\n      input_text: this.state.value,\\n      language: \\\"\\\",\\n      output_text: \\\"\\\"\\n    });\\n    alert('A New Phrase Was Submitted For Translation: ' + this.state.value);\\n    fetch('http://127.0.0.1:8000/api/translations/', {\\n      method: 'POST',\\n      headers: {\\n        'Accept': 'application/json',\\n        'Content-Type': 'application/json',\\n      },\\n      body: text_in\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <form id=\\\"entry\\\" onSubmit={this.handleSubmit}>\\n      \\n        <label> \\n          <div>\\n            Enter Your Foreign Language Text Here:\\n            <span></span>  \\n          </div>\\n          <span></span>  \\n          <textarea value={this.state.value} onChange={this.handleChange} />\\n        </label>\\n        <input type=\\\"submit\\\" value=\\\"Submit\\\" />\\n      </form>\\n    );\\n  }\\n}\\n\\n// export default TextForm;\\n\\n\\nclass Table extends Component {\\n  state = {\\n    translations: []\\n  };\\n\\n  async componentDidMount() {\\n    try {\\n      const res = await fetch('http://127.0.0.1:8000/api/translations/');\\n      const translations = await res.json();\\n      this.setState({\\n        translations\\n      });\\n    } catch (e) {\\n      console.log(e);\\n    }\\n  }\\n\\n  render() {\\n    return (\\n      <table id=\\\"entries\\\">\\n        <tr>\\n            <td>Entered Text</td>\\n            <td>Language of Input</td>\\n            <td>English Translation</td>\\n        </tr>\\n       {this.state.translations.map(item => (\\n        <tr>\\n          <td key={item.input_text}>{item.input_text}</td>\\n          <td key={item.language}>{item.language}</td>\\n          <td key={item.output_text}>{item.output_text}</td>\\n        </tr>\\n      ))}\\n      </table>\\n    );\\n  }\\n}\\n\\n\\nexport {App, TextForm, Table};\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport {App, Table, TextForm} from './App';\\nimport * as serviceWorker from './serviceWorker';\\nReactDOM.render(<App />, document.getElementById(\\\"root\\\"));\\n\",\"module.exports = __webpack_public_path__ + \\\"static/media/translate.e327b575.svg\\\";\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{12:function(e,t,a){e.exports=a(23)},17:function(e,t,a){},21:function(e,t,a){},23:function(e,t,a){\"use strict\";a.r(t);var n=a(0),l=a.n(n),r=a(7),i=a.n(r),c=(a(17),a(8)),u=a.n(c),s=a(11),o=a(2),h=a(3),m=a(5),d=a(4),v=a(6),b=a(1),p=a(9),E=a.n(p),f=(a(21),function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(m.a)(this,Object(d.a)(t).call(this,e))).handleClick=a.handleClick.bind(Object(b.a)(Object(b.a)(a))),a.state={value:-1},a}return Object(v.a)(t,e),Object(h.a)(t,[{key:\"handleClick\",value:function(){this.setState({value:-1*this.state.value})}},{key:\"render\",value:function(){return-1===this.state.value?l.a.createElement(\"div\",null,l.a.createElement(\"nav\",null,l.a.createElement(\"div\",{id:\"nav\"},l.a.createElement(\"img\",{src:E.a}),l.a.createElement(\"span\",null,\"Traduce: the translation nation's number 1 notes board \"),l.a.createElement(\"div\",{id:\"choices\",className:\"wideDiv\"},l.a.createElement(\"button\",{onClick:this.handleClick},\"See History\")))),l.a.createElement(\"div\",null,l.a.createElement(g,null))):1===this.state.value?l.a.createElement(\"div\",null,l.a.createElement(\"nav\",null,l.a.createElement(\"div\",{id:\"nav\"},l.a.createElement(\"img\",{src:E.a}),l.a.createElement(\"span\",null,\"Traduce: the translation nation's number 1 notes board \"),l.a.createElement(\"div\",{id:\"choices\",className:\"wideDiv\"},l.a.createElement(\"button\",{onClick:this.handleClick},\"Translate\")))),l.a.createElement(\"div\",null,l.a.createElement(j,null))):void 0}}]),t}(n.Component)),g=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(m.a)(this,Object(d.a)(t).call(this,e))).state={value:\"Please enter a new phrase.\"},a.handleChange=a.handleChange.bind(Object(b.a)(Object(b.a)(a))),a.handleSubmit=a.handleSubmit.bind(Object(b.a)(Object(b.a)(a))),a}return Object(v.a)(t,e),Object(h.a)(t,[{key:\"handleChange\",value:function(e){this.setState({value:e.target.value})}},{key:\"handleSubmit\",value:function(e){var t=JSON.stringify({input_text:this.state.value,language:\"\",output_text:\"\"});alert(\"A New Phrase Was Submitted For Translation: \"+this.state.value),fetch(\"http://127.0.0.1:8000/api/translations/\",{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:t})}},{key:\"render\",value:function(){return l.a.createElement(\"form\",{id:\"entry\",onSubmit:this.handleSubmit},l.a.createElement(\"label\",null,l.a.createElement(\"div\",null,\"Enter Your Foreign Language Text Here:\",l.a.createElement(\"span\",null)),l.a.createElement(\"span\",null),l.a.createElement(\"textarea\",{value:this.state.value,onChange:this.handleChange})),l.a.createElement(\"input\",{type:\"submit\",value:\"Submit\"}))}}]),t}(n.Component),j=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,l=new Array(n),r=0;r<n;r++)l[r]=arguments[r];return(a=Object(m.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(l)))).state={translations:[]},a}return Object(v.a)(t,e),Object(h.a)(t,[{key:\"componentDidMount\",value:function(){var e=Object(s.a)(u.a.mark(function e(){var t,a;return u.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,fetch(\"http://127.0.0.1:8000/api/translations/\");case 3:return t=e.sent,e.next=6,t.json();case 6:a=e.sent,this.setState({translations:a}),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(0),console.log(e.t0);case 13:case\"end\":return e.stop()}},e,this,[[0,10]])}));return function(){return e.apply(this,arguments)}}()},{key:\"render\",value:function(){return l.a.createElement(\"table\",{id:\"entries\"},l.a.createElement(\"tr\",null,l.a.createElement(\"td\",null,\"Entered Text\"),l.a.createElement(\"td\",null,\"Language of Input\"),l.a.createElement(\"td\",null,\"English Translation\")),this.state.translations.map(function(e){return l.a.createElement(\"tr\",null,l.a.createElement(\"td\",{key:e.input_text},e.input_text),l.a.createElement(\"td\",{key:e.language},e.language),l.a.createElement(\"td\",{key:e.output_text},e.output_text))}))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(l.a.createElement(f,null),document.getElementById(\"root\"))},9:function(e,t,a){e.exports=a.p+\"static/media/translate.e327b575.svg\"}},[[12,2,1]]]);","extractedComments":[]}