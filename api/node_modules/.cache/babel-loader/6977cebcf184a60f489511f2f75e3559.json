{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Juan/projects/react-translations/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Juan/projects/react-translations/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Juan/projects/react-translations/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Juan/projects/react-translations/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Juan/projects/react-translations/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Juan/projects/react-translations/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Juan/projects/react-translations/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Juan/projects/react-translations/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Juan/projects/react-translations/src/App.js\";\nimport React, { Component } from 'react';\nimport translate from \"./translate.svg\";\nimport './App.css';\nimport ReactDOM from 'react-dom';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      value: -1\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState({\n        value: -1 * this.state.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.value === -1) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"nav\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"nav\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: translate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Traduce\"), React.createElement(\"div\", {\n          id: \"choices\",\n          className: \"wideDiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"See History\")))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(TextForm, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        })));\n      }\n\n      if (this.state.value === 1) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"nav\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"nav\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Traduce\"), React.createElement(\"div\", {\n          id: \"choices\",\n          className: \"wideDiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Translate/\")))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(Table, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar TextForm =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(TextForm, _Component2);\n\n  function TextForm(props) {\n    var _this2;\n\n    _classCallCheck(this, TextForm);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(TextForm).call(this, props));\n    _this2.state = {\n      value: 'Please enter a new phrase.'\n    };\n    _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleSubmit = _this2.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(TextForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var text_in = JSON.stringify({\n        input_text: this.state.value,\n        language: \"\",\n        output_text: \"\"\n      });\n      alert('A New Phrase Was Submitted For Translation: ' + this.state.value);\n      fetch('http://127.0.0.1:8000/api/translations/', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: text_in\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        id: \"entry\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Enter Your Text Here:\", React.createElement(\"textarea\", {\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TextForm;\n}(Component); // export default TextForm;\n\n\nvar Table =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(Table, _Component3);\n\n  function Table() {\n    var _getPrototypeOf2;\n\n    var _this3;\n\n    _classCallCheck(this, Table);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Table)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this3.state = {\n      translations: []\n    };\n    return _this3;\n  }\n\n  _createClass(Table, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res, translations;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch('http://127.0.0.1:8000/api/translations/');\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                translations = _context.sent;\n                this.setState({\n                  translations: translations\n                });\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 10]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"table\", {\n        id: \"entries\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Entered Text\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Language of Input\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"English Translation\")), this.state.translations.map(function (item) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          key: item.input_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, item.input_text), React.createElement(\"td\", {\n          key: item.language,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, item.language), React.createElement(\"td\", {\n          key: item.output_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, item.output_text));\n      }));\n    }\n  }]);\n\n  return Table;\n}(Component);\n\nexport { App, TextForm, Table };","map":{"version":3,"sources":["/Users/Juan/projects/react-translations/src/App.js"],"names":["React","Component","ReactDOM","App","props","handleClick","bind","state","value","setState","translate","TextForm","handleChange","handleSubmit","event","target","text_in","JSON","stringify","input_text","language","output_text","alert","fetch","method","headers","body","Table","translations","res","json","console","log","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport translate from './translate.svg';\nimport './App.css';\nimport ReactDOM from 'react-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      value: -1\n    };\n  }\n\n  handleClick () {\n      this.setState({value: (-1*this.state.value)});\n  }\n\n  render () {\n    if (this.state.value === -1){\n      return(\n        <div>\n          <nav>\n            <div id=\"nav\">\n              <img src={translate}></img>\n              <span>Traduce</span>\n                <div id=\"choices\" className=\"wideDiv\">\n                < button onClick={this.handleClick}>See History</button>\n              </div>\n            </div>\n          </nav>\n          <div>\n            <TextForm />\n          </div>\n        </div>\n      );\n    }\n\n    if (this.state.value === 1){\n      return (\n        <div>\n          <nav>\n            <div id=\"nav\">\n            <span>Traduce</span>\n              <div id=\"choices\" className=\"wideDiv\">\n              <button onClick={this.handleClick}>Translate/</button>\n              </div>\n            </div>\n          </nav>\n          <div>\n            <Table />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\n\nclass TextForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'Please enter a new phrase.'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    var text_in = JSON.stringify({\n      input_text: this.state.value,\n      language: \"\",\n      output_text: \"\"\n    });\n    alert('A New Phrase Was Submitted For Translation: ' + this.state.value);\n    fetch('http://127.0.0.1:8000/api/translations/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: text_in\n    });\n  }\n\n  render() {\n    return (\n      <form id=\"entry\" onSubmit={this.handleSubmit}>\n        <label>\n          Enter Your Text Here:\n          <textarea value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\n// export default TextForm;\n\n\nclass Table extends Component {\n  state = {\n    translations: []\n  };\n\n  async componentDidMount() {\n    try {\n      const res = await fetch('http://127.0.0.1:8000/api/translations/');\n      const translations = await res.json();\n      this.setState({\n        translations\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return (\n      <table id=\"entries\">\n        <tr>\n            <td>Entered Text</td>\n            <td>Language of Input</td>\n            <td>English Translation</td>\n        </tr>\n       {this.state.translations.map(item => (\n        <tr>\n          <td key={item.input_text}>{item.input_text}</td>\n          <td key={item.language}>{item.language}</td>\n          <td key={item.output_text}>{item.output_text}</td>\n        </tr>\n      ))}\n      </table>\n    );\n  }\n}\n\n\nexport {App, TextForm, Table};\n"]},"metadata":{},"sourceType":"module"}